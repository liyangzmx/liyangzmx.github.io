@startuml setdataicon

hide footbox
skinparam {
    ' defaultFontName Abyssinica SIL
    Shadowing false
    backgroundColor white
    NoteFontColor #Black
    NoteFontSize 16
    NoteTextAlignment left
    NoteBackgroundColor WhiteSmoke
    NoteColor transparent
    NoteBorderThickness 0
    NoteBorderColor transparent
    NoteBorderThickness 0
    NoteShadowing false
    ParticipantPadding 0
    BoxPadding 20
    dpi 96
    ClassBackgroundColor transparent
    ClassHeaderBackgroundColor lightgreen
    ClassStereotypeFontColor transparent
    SequenceBoxBordercolor WhiteSmoke
    SequenceBoxFontSize 24
    SequenceBoxFontColor Black
    SequenceBoxBackgroundColor WhiteSmoke
    SequenceLifeLineBackgroundColor WhiteSmoke
    SequenceMessageAlignment center
    SequenceGroupHeaderFontColor White
    SequenceGroupHeaderFontSize 20
    SequenceGroupBackgroundColor DarkOliveGreen
    SequenceGroupBodyBackgroundColor transparent
    SequenceGroupBorderThickness 4
    SequenceGroupBorderColor DarkOliveGreen
    ' transparent
    sequence {
        ParticipantBackgroundColor WhiteSmoke
        ParticipantBorderColor Gray
        ParticipantFontStyle Bold
        ParticipantFontSize 12
        ParticipantPadding 0

        LifeLineBorderColor DimGray
        ArrowColor Black
        ArrowThickness 0.8
        ColorArrowSeparationSpace 30
    }
}

box system_server
participant TelephonyRegistry
end box

box SystemUI
participant NetworkCallback
' participant SecurityControllerImpl

participant NetworkControllerImpl
participant WifiSignalController

participant IPhoneStateListenerStub
' participant MobileTelephonyCallback
' participant MobileStatusTracker
participant MobileSignalController
participant CallbackHandler
participant StatusBarSignalPolicy
participant StatusBarIconControllerImpl
participant IconManager
participant StatusBarMobileView
' participant ImageView
end box

->NetworkCallback:onAvailable()
' NetworkCallback->SecurityControllerImpl:fireCallbacks()
' SecurityControllerImpl->StatusBarSignalPolicy:onStateChanged()

NetworkCallback->StatusBarSignalPolicy:onStateChanged()
note left:SecurityControllerImpl.fireCallbacks()\n\
    StatusBarSignalPolicy.onStateChanged()
activate StatusBarSignalPolicy
StatusBarSignalPolicy-->StatusBarSignalPolicy:updateVpn()
activate StatusBarSignalPolicy
StatusBarSignalPolicy->StatusBarIconControllerImpl:setIcon()
deactivate StatusBarSignalPolicy
deactivate StatusBarSignalPolicy

-->NetworkControllerImpl:onReceive()
activate NetworkControllerImpl
NetworkControllerImpl->WifiSignalController:handleBroadcast()
deactivate NetworkControllerImpl
activate WifiSignalController
WifiSignalController->WifiSignalController:notifyListenersIfNecessary()
activate WifiSignalController
WifiSignalController->WifiSignalController:notifyListeners()
activate WifiSignalController
WifiSignalController->WifiSignalController:notifyListenersForNonCarrierWifi()
activate WifiSignalController
WifiSignalController->CallbackHandler:setWifiIndicators()
deactivate WifiSignalController
deactivate WifiSignalController
deactivate WifiSignalController
deactivate WifiSignalController
activate CallbackHandler
CallbackHandler-->CallbackHandler:post()
activate CallbackHandler
CallbackHandler->StatusBarSignalPolicy:setWifiIndicators()
deactivate CallbackHandler
deactivate CallbackHandler
activate StatusBarSignalPolicy
StatusBarSignalPolicy->StatusBarSignalPolicy:updateWifiIconWithState()
activate StatusBarSignalPolicy
StatusBarSignalPolicy->StatusBarIconControllerImpl:setIconVisibility()
deactivate StatusBarSignalPolicy
deactivate StatusBarSignalPolicy
' CallbackHandler->StatusBarIconControllerImpl:setIconVisibility()
' note left:StatusBarSignalPolicy.setWifiIndicators()\n\
'     StatusBarSignalPolicy.updateWifiIconWithState()\n\
'         StatusBarIconControllerImpl.setIconVisibility()

activate StatusBarIconControllerImpl
StatusBarIconControllerImpl->StatusBarIconControllerImpl:handleSet()
activate StatusBarIconControllerImpl
' group forEach
StatusBarIconControllerImpl->IconManager:onSetIconHolder()
deactivate StatusBarIconControllerImpl
deactivate StatusBarIconControllerImpl
' deactivate StatusBarIconControllerImpl
activate IconManager
IconManager->IconManager:onSetMobileIcon()
activate IconManager
IconManager->StatusBarMobileView:applyMobileState()
deactivate IconManager
deactivate IconManager
activate StatusBarMobileView
StatusBarMobileView->StatusBarMobileView:updateState()
activate StatusBarMobileView
StatusBarMobileView->StatusBarMobileView:ImageView.setVisibility()
activate StatusBarMobileView
deactivate StatusBarMobileView
deactivate StatusBarMobileView
deactivate StatusBarMobileView

' activate StatusBarIconControllerImpl
' deactivate StatusBarIconControllerImpl
' StatusBarIconControllerImpl->StatusBarIconControllerImpl:handleSet()
' deactivate StatusBarIconControllerImpl
' note over CallbackHandler:...

->TelephonyRegistry:notifyDataConnectionForSubscriber()
TelephonyRegistry-[#Blue]->IPhoneStateListenerStub:<font color=blue>onDataConnectionStateChanged()</font>
IPhoneStateListenerStub->MobileSignalController:updateTelephony()
note left:MobileTelephonyCallback.onDataConnectionStateChanged()\n\
    MobileStatusTracker.onMobileStatusChanged()\n\
        MobileSignalController.updateTelephony()
' IPhoneStateListenerStub->MobileTelephonyCallback:onDataConnectionStateChanged()
' MobileTelephonyCallback->MobileStatusTracker:onMobileStatusChanged()
' MobileStatusTracker->MobileSignalController:updateTelephony()
activate MobileSignalController
MobileSignalController->MobileSignalController:notifyListenersIfNecessary()
activate MobileSignalController
MobileSignalController->MobileSignalController:notifyListeners()
activate MobileSignalController
MobileSignalController->CallbackHandler:setMobileDataIndicators()
deactivate MobileSignalController
deactivate MobileSignalController
deactivate MobileSignalController
activate CallbackHandler
CallbackHandler-->CallbackHandler:post()
activate CallbackHandler
CallbackHandler->StatusBarSignalPolicy:setMobileDataIndicators()
deactivate CallbackHandler
deactivate CallbackHandler
' CallbackHandler->StatusBarIconControllerImpl:setMobileIcons()
' note left:StatusBarSignalPolicy.setMobileDataIndicators()\n\
'     StatusBarIconControllerImpl.setMobileIcons()
activate StatusBarSignalPolicy
StatusBarSignalPolicy->StatusBarIconControllerImpl:setMobileIcons()
deactivate StatusBarSignalPolicy
' group for
activate StatusBarIconControllerImpl
StatusBarIconControllerImpl->StatusBarIconControllerImpl:handleSet()
activate StatusBarIconControllerImpl
' group forEach
StatusBarIconControllerImpl->IconManager:onSetIconHolder()
deactivate StatusBarIconControllerImpl
deactivate StatusBarIconControllerImpl
' deactivate StatusBarIconControllerImpl
' activate IconManager
' IconManager->IconManager:onSetMobileIcon()
' activate IconManager
' IconManager->StatusBarMobileView:applyMobileState()
' deactivate IconManager
' deactivate IconManager
' activate StatusBarMobileView
' StatusBarMobileView->StatusBarMobileView:updateState()
' activate StatusBarMobileView
' StatusBarMobileView->StatusBarMobileView:ImageView.setVisibility()
' activate StatusBarMobileView
' deactivate StatusBarMobileView
' deactivate StatusBarMobileView
' deactivate StatusBarMobileView
' note left:mMobileRoaming
' end group
' end group